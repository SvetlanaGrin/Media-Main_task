// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\user\GolandProjects\llcmediatelTask\internal\handler\handler.go

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	models "llcmediatelTask/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMoneyChanger is a mock of MoneyChanger interface.
type MockMoneyChanger struct {
	ctrl     *gomock.Controller
	recorder *MockMoneyChangerMockRecorder
}

// MockMoneyChangerMockRecorder is the mock recorder for MockMoneyChanger.
type MockMoneyChangerMockRecorder struct {
	mock *MockMoneyChanger
}

// NewMockMoneyChanger creates a new mock instance.
func NewMockMoneyChanger(ctrl *gomock.Controller) *MockMoneyChanger {
	mock := &MockMoneyChanger{ctrl: ctrl}
	mock.recorder = &MockMoneyChangerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMoneyChanger) EXPECT() *MockMoneyChangerMockRecorder {
	return m.recorder
}

// Exchange mocks base method.
func (m *MockMoneyChanger) Exchange(money models.Money) models.Answer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Exchange", money)
	ret0, _ := ret[0].(models.Answer)
	return ret0
}

// Exchange indicates an expected call of Exchange.
func (mr *MockMoneyChangerMockRecorder) Exchange(money interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Exchange", reflect.TypeOf((*MockMoneyChanger)(nil).Exchange), money)
}
